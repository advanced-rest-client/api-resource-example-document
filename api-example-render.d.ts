/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-example-render.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css, unsafeCSS} from 'lit-element';

declare namespace ApiElements {

  /**
   * `api-example-render`
   *
   * Renders a JSON values using Prism highlighter or JSON table.
   *
   * ## Data model
   *
   * The model is generated by `api-example-generator`. Use it to generate
   * view model for examples for AMF shape.
   *
   * ### ExampleModel
   *
   * - **hasRaw** `Boolean` - if true then `raw` property has a value
   * - **hasTitle** `Boolean` - if true then `title` property has a value
   * - **hasUnion** `Boolean` - if true then `values` property has a value
   * - **value** `String`, Optional - Example to render
   * - **title** - `String`, Optional - Example name, only when `hasTitle` is set
   * - **raw** `String`, Optional - Raw value of RAML example. This value is a
   * YAML or JSON schema value. This is only set when raw value is available in
   * the model and it is not JSON/XML.
   * - **values** `Array<ExampleModel>`, Optional - Only when `hasUnion` is set.
   *
   * ## Example
   *
   * ```javascript
   * <api-example-render example="{...}" is-json mime-type="application/json"></api-example-render>
   * ```
   *
   * ## Styling
   *
   * `<api-resource-example-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--api-example-render` | Mixin applied to this elment | `{}`
   * `--code-block` | Mixin applied to the output block | `{}`
   */
  class ApiExampleRender extends LitElement {

    /**
     * Current state of "table" button. When tru the button is highlighted.
     * Note, this won't trigger rendering table/code view as this property is used
     * by `api-resource-example-document` to handle table state change.
     */
    table: boolean|null|undefined;

    /**
     * Examples media type
     */
    mediaType: string|null|undefined;

    /**
     * Data to render.
     */
    example: object|null|undefined;

    /**
     * Opens example source view (source from API spec file).
     */
    sourceOpened: boolean|null|undefined;

    /**
     * When true the example is a JSON type example.
     */
    isJson: boolean|null|undefined;

    /**
     * Index of selected union.
     */
    selectedUnion: number|null|undefined;

    /**
     * When set it renders JSON table instead of code view.
     */
    renderTable: boolean|null|undefined;

    /**
     * When set the title won't be rendered event if the example has one.
     */
    noTitle: boolean|null|undefined;

    /**
     * When set the actions row (copy, switch view type) is not rendered.
     */
    noActions: boolean|null|undefined;
    constructor();

    /**
     * This is rather dirty hack to import Polymer's `prism-theme-default`.
     * The theme inserts `dom-module` with styles to the head section upon import.
     * This method reads the content of the theme and creates CSSResult instance
     * of it.
     */
    static getPrismTheme(): CSSResult|null;
    render(): any;
    _setObservableProperty(prop: any, value: any): any;

    /**
     * Computes whether passed value is a valig JSON object, when component is
     * marked to parse JSON data.
     *
     * @param isJson [description]
     * @param value Current example value
     */
    _computeIsJson(isJson: Boolean|null, value: String|null): Boolean|null;
    _computeHasRaw(value: any, raw: any): any;
    _dataChanged(mediaType: any, example: any): void;
    _renderCode(): void;

    /**
     * Dispatches `syntax-highlight` custom event
     *
     * @param code Code to highlight
     * @param type Mime type of the code
     * @returns Highlighted code.
     */
    highlight(code: String|null, type: String|null): String|null;

    /**
     * Coppies current response text value to clipboard."tabble"
     */
    _copyToClipboard(e: Event|null): void;

    /**
     * Resets button icon.
     *
     * @param button Button to reset.
     */
    _resetCopyButtonState(button: Element|null): void;
    _computeUnionExamples(selectedUnion: any, example: any): any;
    _toggleTable(e: any): void;
    _toggleSourceOpened(e: any): void;
    _toggleActionButtonCssPart(target: any, active: any): void;

    /**
     * Handler for union type button click.
     * Sets `selectedUnion` property.
     */
    _selectUnion(e: ClickEvent|null): void;
    _renderUnion(example: any): any;
    _renderExample(example: any): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "api-example-render": ApiElements.ApiExampleRender;
  }
}
