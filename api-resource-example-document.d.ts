/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-resource-example-document.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../clipboard-copy/clipboard-copy.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../json-table/json-table.d.ts" />
/// <reference path="../prism-element/prism-highlighter.d.ts" />
/// <reference path="../amf-helper-mixin/amf-helper-mixin.d.ts" />
/// <reference path="api-json-example-render.d.ts" />
/// <reference path="../api-example-generator/api-example-generator.d.ts" />

declare namespace ApiElements {

  /**
   * `api-resource-example-document`
   *
   * Renders list of examples defined in AMF model. It renders values that
   * are structured examples (JSON, RAML type).
   *
   * ## Example
   * ```html
   * <api-resource-example-document examples="[...]"></api-resource-example-document>
   * ```
   *
   * ## Styling
   *
   * `<api-resource-example-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--api-resource-example-document` | Mixin applied to this elment | `{}`
   * `--api-resource-example-document-title` | Mixin applied to example title | `{}`
   * `--api-resource-example-document-button-active-background-color` | Background color of active "tabble" button | `#e0e0e0`
   */
  class ApiResourceExampleDocument extends
    ApiElements.AmfHelperMixin(
    Object) {

    /**
     * AMF model for examples.
     */
    examples: any[]|null|undefined;

    /**
     * If true it will display a table view instead of JSON code.
     * `isJson` must be set to use this option.
     */
    table: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _hasTitle(item: any): any;
    _computeTitle(item: any): any;

    /**
     * Coppies current response text value to clipboard.
     */
    _copyToClipboard(e: any): void;
    _resetCopyButtonState(button: any): void;

    /**
     * Toggles the JSON table view
     */
    toggleTable(): void;

    /**
     * Handler to the `table` change, fires corresponding event and sets local storage.
     */
    _tableChanged(state: any): void;

    /**
     * Updates the value of the `isJsonTable` property when the corresponding localStorage
     * property change.
     */
    _onStorageChanged(e: any): void;

    /**
     * Reads the local value (always a string) as a boolean value.
     *
     * @param value The value read from the local storage.
     * @returns Boolean value read from the value.
     */
    _localStorageValueToBoolean(value: String|null): Boolean|null;

    /**
     * Handler to the incomming `json-table-state-changed` event.
     * Sets the `table` property if it is different.
     */
    _onJsonTableStateChanged(e: any): void;

    /**
     * Computes example value for the type.
     * It uses `api-example-generator` to compute the value.
     *
     * @param item Example value
     * @returns Value of the example.
     */
    _computeExample(item: object|null): String|null|undefined;
  }
}

interface HTMLElementTagNameMap {
  "api-resource-example-document": ApiElements.ApiResourceExampleDocument;
}
